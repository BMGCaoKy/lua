---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hlm.
--- DateTime: 2021/4/22 10:23
---

local self = AsyncProcess
local strfmt = string.format
local cjson = require("cjson")

-- 根据游戏id获取同玩好友和非同玩好友userId列表
function AsyncProcess.GetChatFriendUserIdWithGameId(userId, type, callback)
    local urlKey = "GetChatFriendUserIdWithGameId" -- strfmt("%s/gameaide/api/%s/inner/game/friends/ids/%s", self.ServerHttpHost, "v1", userId)
    local params = {
        { "gameId", World.GameName },
        { "type", type }
    }
    self.HttpRequestByKey("GET", urlKey, {"v1", userId}, params, function (response, isSuccess)
        if not isSuccess then
            print("GetChatFriendUserIdWithGameId Error: " , response.code)
            return
        end
        callback(response.data)
    end, {}, true)
end

-- 根据游戏id获取同玩好友和非同玩好友
function AsyncProcess.GetChatFriendWithGameId(userId, language, type, pageNo, pageSize, callback)
    local urlKey = "GetChatFriendWithGameId" -- strfmt("%s/gameaide/api/%s/inner/game/friends/%s", self.ServerHttpHost, "v1", userId)
    local params = {
        { "gameId", World.GameName },
        { "language", tostring(language) },
        { "pageNo", tostring(pageNo) },
        { "pageSize", tostring(pageSize) },
        { "type", type }
    }
    self.HttpRequestByKey("GET", urlKey, {"v1", userId}, params, function (response, isSuccess)
        if not isSuccess then
            print("GetChatFriendWithGameId Error: " , response.code)
            return
        end
        callback(response.data)
    end, {}, true)
end

-- 根据游戏id获取好友
function AsyncProcess.GetChatFriend(userId, language,pageNo, pageSize, callback)
    local urlKey = "GetChatFriendWithGameId" -- strfmt("%s/gameaide/api/%s/inner/game/friends/%s", self.ServerHttpHost, "v1", userId)
    local params = {
        { "language", tostring(language) },
        { "pageNo", tostring(pageNo) },
        { "pageSize", tostring(pageSize) },
    }
    self.HttpRequestByKey("GET", urlKey, {"v1", userId}, params, function (response, isSuccess)
        if not isSuccess then
            print("GetChatFriend Error: " , response.code)
            return
        end
        callback(response.data)
    end, {}, true)
end

-- 根据游戏id获取同玩好友和非同玩好友userId列表
function AsyncProcess.GetChatFriendUserId(userId,language, callback)
    local urlKey = "GetChatFriendUserIdWithGameId" -- strfmt("%s/gameaide/api/%s/inner/game/friends/ids/%s", self.ServerHttpHost, "v1", userId)
    local params = {
        {"language",tostring(language)}
    }
    self.HttpRequestByKey("GET", urlKey, {"v1", userId}, params, function (response, isSuccess)
        if not isSuccess then
            print("GetChatFriendUserIdWithGameId Error: " , response.code)
            return
        end
        callback(response.data)
    end, {}, true)
end

--获取详细数据
function AsyncProcess.GetUserDeatailInfo(userId,searchUserId,language,callback)
    local urlKey = "GetUserDeatailInfo" -- strfmt("%s/gameaide/api/%s/inner/game/%s/detail", self.ServerHttpHost,"v1"  userId)
    local params = {
        { "language", tostring(language)},
        { "searchText", tostring(searchUserId) },
        { "version" , "v1"}
    }
    self.HttpRequestByKey("GET", urlKey, {"v1", userId}, params, function (response, isSuccess)
        if not isSuccess then
            print("GetChatFriendUserIdWithGameId Error: " , response.code)
            return
        end
        callback(response.data)
    end, {}, true)
end

-- 保存用户游戏数据
function AsyncProcess.SavePlayerGameSpecialData(userId, dataStr, callback)
    local urlKey = "SavePlayerGameSpecialData"-- strfmt("%s/gameaide/api/v1/inner/game/user/data/save/%s", self.ServerHttpHost, userId)
    local params = {}
    local body = {
        gameId= World.GameName ,
        data = cjson.encode(dataStr)  ,
    }
    self.HttpRequestByKey("POST", urlKey, {userId}, params, function (response, isSuccess)
        if not isSuccess then
            print("SavePlayerGameSpecialData Error: " , response.code)
            if callback then
                callback(false)
            end
            return
        end
        print("SavePlayerGameSpecialData success: " , Lib.v2s(response))
        if callback then
            callback(true)
        end
    end, body, true)
end
local function safeDecodeJSON(content,def)
    if content == "" then
        return def or false
    end
    local ok, ret = xpcall(cjson.decode, debug.traceback, content)
    if not ok then
        print("json decode fail:",content)
        return def or false
    end
    return ret
end
-- 批量获取用户游戏数据
function AsyncProcess.GetPlayerGameSpecialData(userIds, callback)
    local urlKey = "GetPlayerGameSpecialData" -- strfmt("%s/gameaide/api/v1/inner/game/user/data/list/%s", self.ServerHttpHost, World.GameName)
    local params = {}
    local body = userIds
    self.HttpRequestByKey("POST", urlKey, {World.GameName}, params, function (response, isSuccess)
        if not isSuccess then
            --perror("GetPlayerGameSpecialData:Error parma:",Lib.v2s(userIds,2))
            --if callback then
            --    callback(false)
            --end
            return
        end
        if callback then
            for _,val in pairs(response.data) do
                val.data = safeDecodeJSON( val.data,{})
            end
            callback(response.data)
        end
    end, body, true)
end

