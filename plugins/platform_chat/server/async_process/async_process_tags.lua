---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hlm.
--- DateTime: 2021/5/14 10:23
---

local self = AsyncProcess
local strfmt = string.format
local cjson = require("cjson")
local chatSetting = World.cfg.chatSetting or {}

---@class tagsData
---@field label string
---@field relatedLabels string[]
---@field userId string
---@param data tagsData
---@param callback function
function AsyncProcess.AddGameTag(data, callback)
    if not chatSetting.isOpenTagFunction then
        callback({})
        return
    end
    -- local url = strfmt("%s/gameaide/api/v1/inner/%s/user/info/save/label/", self.ServerHttpHost, World.GameName)
    local body = {
        label =data.label,
        relatedLabels = data.relatedLabels,
        userId = data.userId
    }
    self.HttpRequestByKey("POST", "AddGameTag", {World.GameName}, nil, function (response, isSuccess)
        if not isSuccess then
            print("AddGameTag Error: " , response.code)
            return
        end
        callback(response.data)
    end, body, true)
end

---@param bodyData tagsData
---@param callback function
function AsyncProcess.AddBatchGameTag(bodyData, callback)
    if not chatSetting.isOpenTagFunction then
        callback({})
        return
    end
    -- local url = strfmt("%s/gameaide/api/v1/inner/%s/user/info/save/label/batch", self.ServerHttpHost, World.GameName)
    local body = bodyData
    self.HttpRequestByKey("POST", "AddBatchGameTag", {World.GameName}, nil, function (response, isSuccess)
        if not isSuccess then
            print("AddBatchGameTag Error: " , response.code)
            return
        end
        callback(response.data)
    end, body, true)
end

---@param data tagsData
---@param callback function
function AsyncProcess.DelGameTag(data, callback)
    if not chatSetting.isOpenTagFunction then
        callback({})
        return
    end
    -- local url = strfmt("%s/gameaide/api/v1/inner/%s/user/info/remove/label/", self.ServerHttpHost, World.GameName)
    local body = {
        label =data.label,
        relatedLabels = data.relatedLabels or nil,
        userId = data.userId
    }
    self.HttpRequestByKey("POST", "DelGameTag", {World.GameName}, nil, function (response, isSuccess)
        if not isSuccess then
            print("DelGameTag Error: " , response.code)
            return
        end
        callback(response.data)
    end, body, true)
end

---@param bodyData tagsData
---@param callback function
function AsyncProcess.DelBatchGameTag(bodyData, callback)
    if not chatSetting.isOpenTagFunction then
        callback({})
        return
    end
    -- local url = strfmt("%s/gameaide/api/v1/inner/%s/user/info/remove/label/batch", self.ServerHttpHost, World.GameName)
    local body = bodyData
    self.HttpRequestByKey("POST", "DelBatchGameTag", {World.GameName}, nil, function (response, isSuccess)
        if not isSuccess then
            print("DelBatchGameTag Error: " , response.code)
            return
        end
        callback(response.data)
    end, body, true)
end

-- 请求某个玩家的标签数据,查某个玩家的房间信息和游戏状态
---@field userId string
---@param callback function
function AsyncProcess.GetOnePlayerTagData(userId, callback)
    if not chatSetting.isOpenTagFunction then
        callback({})
        return
    end
    -- local url = strfmt("%s/gameaide/api/v1/inner/%s/user/info/find", self.ServerHttpHost, World.GameName)
    local params = {
        { "userId", userId }
    }
    self.HttpRequestByKey("GET", "GetOnePlayerTagData", {World.GameName}, params, function (response, isSuccess)
        if not isSuccess then
            print("GetOnePlayerTagData Error: " , response.code)
            print("GetOnePlayerTagData Error params: " , Lib.v2s(params,2))
            return
        end
        if callback then
            if response.data == nil then
                response.data = {}
            end
            if response.data.labels == nil then
                response.data.labels = {}
            end
            callback(response.data)
        end
    end, {}, true)
end

-- 获取玩家游戏时长
---@field userId string
---@param callback function
function AsyncProcess.GetOneGamePlayTime(userId, callback)
    -- local url = strfmt("%s/user/api/v1/inner/user/game/career/time", self.ServerHttpHost)
    local params = {
        { "userId", userId },
        {"gameIds",  table.concat({World.GameName}, ",")},
    }
    self.HttpRequestByKey("GET", "GetOneGamePlayTime", {}, params, function (response, isSuccess)
        if not isSuccess then
            print("GetOneGamePlayTime Error: " , response.code)
            return
        end
        if callback then
            callback(response.data)
        end
    end, {}, true)
end