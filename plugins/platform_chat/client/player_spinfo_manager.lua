---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hlm.
--- DateTime: 2021/3/18 11:07
--- 这里是玩家特殊数据的管理类
local PlayerSpInfoManager = T(Lib, "PlayerSpInfoManager")
local handles = T(Player, "PackageHandlers")
function PlayerSpInfoManager:init()
    self.playerSpInfoDic = {}
    --暫存回調
    self.cacheCallBackDic = {}
end
function PlayerSpInfoManager:playerSpInfoSync(list)
    if not self.playerSpInfoDic then
        self.playerSpInfoDic = {}
    end
    for key,val in pairs(list) do
        self.playerSpInfoDic[key] = val
        if self.cacheCallBackDic[key] then
            self.cacheCallBackDic[key](self.playerSpInfoDic[key])
            self.cacheCallBackDic[key] = nil
        end
    end
end
---@param userId string
---@param cb function
function PlayerSpInfoManager:getPlayerSpDataById(userId,cb,useClientCache)
    userId = tostring(userId)
    if not cb or type(cb) ~= "function" then
        print("PlayerSpInfoManager:getPlayerSpDataById need a callback!")
        return
    end
    -- 取消客户端的缓存了，都走服务端数据
    if useClientCache and self.playerSpInfoDic[userId] then
        cb(self.playerSpInfoDic[userId])
    else
        Me:sendPacket({
            pid = "GetPlayerSpDataById",
            userId = userId
        },function(ret)
            if ret then
                self.playerSpInfoDic[userId] = ret
                cb(self.playerSpInfoDic[userId])
            else
                self.cacheCallBackDic[userId] = cb
            end
        end)
    end
end

---@param userId string
---@param cb function
function PlayerSpInfoManager:getPlayerSpDataListById(userIds,cb)
    Me:sendPacket({
        pid = "GetPlayerSpDataListById",
        userIds = userIds
    })
    table.sort(userIds)
    local listKey = table.concat(userIds, ",")
    self.cacheCallBackDic[listKey] = cb
end

function handles:PushPlayerSpInfoListSync(packet)
    local listUserId = {}
    for _,info in pairs(packet.list) do
        table.insert(listUserId, info.userId)
        PlayerSpInfoManager.playerSpInfoDic[tostring(info.userId)] = info.data
    end
    table.sort(listUserId)
    local listKey = table.concat(listUserId, ",")
    if PlayerSpInfoManager.cacheCallBackDic[listKey] then
        PlayerSpInfoManager.cacheCallBackDic[listKey](packet.list)
        PlayerSpInfoManager.cacheCallBackDic[listKey] = nil
    end
end

function handles:PlayerSpInfoSync(packet)
    if packet.list then
        PlayerSpInfoManager:playerSpInfoSync(packet.list)
    else
        Lib.logError("handles:PlayerSpInfoSync:list is nill:",Lib.v2s(packet.list,2))
    end

end
PlayerSpInfoManager:init()