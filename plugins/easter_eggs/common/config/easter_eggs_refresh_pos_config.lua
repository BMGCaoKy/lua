---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2022/3/18 21:08
---
---@class EasterEggsRefreshPosConfig
local EasterEggsRefreshPosConfig = T(Config, "EasterEggsRefreshPosConfig")

---@type EasterEggsConfig
local EasterEggsConfig = T(Config, "EasterEggsConfig")

local settings = {}
local settingsByMap = {}

function EasterEggsRefreshPosConfig:init()
    local gameType = World.GameName
    --local csvData = Lib.read_csv_file(Root.Instance():getGamePath() .. "config/easter_eggs.csv", 2)
    local csvData = Lib.read_csv_file(Root.Instance():getRootPath() .. "lua/plugins/easter_eggs/csv/"..gameType.."/easter_eggs_refresh_pos.csv", 2)
    if not csvData then
        print("cant find game config/easter_eggs.csv,try use plugins defualt!")
        csvData = Lib.read_csv_file(Root.Instance():getRootPath() .. "lua/plugins/easter_eggs/csv/easter_eggs_refresh_pos.csv", 2) or {}
    end

    for _, config in pairs(csvData) do
        local data = {
            id = tonumber(config.id),
            type = tonumber(config.n_type),
            pos = Lib.splitString(config.s_pos, "#", true),
            map = config.s_map,
        }
        settings[data.id] = data
        if not settingsByMap[data.type] then
            settingsByMap[data.type] = {}
        end
        table.insert(settingsByMap[data.type], data)
    end
end

function EasterEggsRefreshPosConfig:getCfgById(id)
    return settings[id] or {}
end

function EasterEggsRefreshPosConfig:getAllConfigList()
    return settings or {}
end

function EasterEggsRefreshPosConfig:getAllCfg()
    return settingsByMap or {}
end

function EasterEggsRefreshPosConfig:getCfgByType(type)
    return settingsByMap[type] or {}
end

EasterEggsRefreshPosConfig:init()