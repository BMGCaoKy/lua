---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2022/3/21 16:14
---

local self = AsyncProcess
local strfmt = string.format

local roomGameConfig = Server.CurServer:getConfig()
local regionId = roomGameConfig:getRegionId()
local gameId = World.GameName or "g2052"

--- 添加复活节彩蛋积分
function AsyncProcess.addEasterScore(playerId, scoreNum, callback, failCallback)
    local url = strfmt("%s/activity/api/v1/inner/game/easter/egg", self.ServerHttpHost)
    Lib.logDebug(url)
    Lib.logDebug("prams ", {
        {"userId", playerId},
        {"number", scoreNum},
        {"gameId", gameId},
    })

    self.HttpRequest("POST", url, {
        {"userId", playerId},
        {"number", scoreNum},
        {"gameId", gameId},
    }, function(response, isSuccess)
        Lib.logDebug("addEasterScore ", response)
        if not isSuccess then
            failCallback(response.code)
            return
        end
        if response.data == "fail" then
            failCallback(response.code)
        else
            callback()
        end
    end, {}, false)
end

local testData = {
    code = 1,
    message = "success",
    data = {
        startTime = 1648918877000,
        endTime = 1650815999000,
        peakStart = 1650038400000,
        peakEnd = 1650211199000,
        refreshTime = {
            1648137600000,
            1648224000000,
            1648310400000,
            1648396800000,
            1648483200000,
            1648569600000,
            1648656000000,
            1648742400000,
            1648828800000,
            1648915200000,
            1649001600000,
            1649088000000,
            1649174400000,
            1649260800000,
            1649347200000,
            1649433600000,
            1649520000000,
            1649606400000,
            1649692800000,
            1649779200000,
            1649865600000,
            1649952000000,
            1650038400000,
            1650052800000,
            1650067200000,
            1650081600000,
            1650096000000,
            1650110400000,
            1650124800000,
            1650139200000,
            1650153600000,
            1650168000000,
            1650182400000,
            1650196800000,
            1650211200000,
            1650297600000,
            1650384000000,
            1650470400000,
            1650556800000,
            1650643200000,
            1650729600000
        }
    }
}

local testRefreshTime = {}
local curTime = os.time() * 1000
local count = 4
for i = 1, count do
    table.insert(testRefreshTime, curTime + ((i - 1) * 60000))
end

testData.data.endTime = curTime + ((count) * 60000)
testData.data.refreshTime = testRefreshTime

function AsyncProcess.requestEasterActivityDate(userId, callback)
    local url = strfmt("%s/activity/api/v1/inner/easter/activity/time", self.ServerHttpHost)

    local params = {
        {"userId", userId},
    }

    self.HttpRequest("GET", url, params, function(response, isSuccess)
        --Lib.logDebug(" ", response)
        if not isSuccess then
            Lib.logError(" ????????? ", response)
            return
        end
        --response = testData
        --Lib.logDebug(" ActivityDate == ", userId, Lib.v2s(response.data, 7))

        local data = response.data
        local calcData = {}
        calcData.startTime = data.startTime / 1000
        calcData.endTime = data.endTime / 1000
        calcData.peakStart = data.peakStart / 1000
        calcData.peakEnd = data.peakEnd / 1000
        local refreshTime = {}

        for i, time in ipairs(data.refreshTime) do
            refreshTime[i] = time / 1000
        end
        calcData.refreshTime = refreshTime

        callback(calcData)
    end, {}, false)
end