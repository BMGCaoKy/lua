---
--- Generated by PluginCreator
--- easter_eggs mainLua
--- DateTime:2022-03-15
---

require "common.entity_easter_eggs"
require "common.event_easter_eggs"
require "common.define_easter_eggs"
require "common.config.easter_eggs_config"
require "common.config.easter_eggs_refresh_pos_config"
if World.isClient then
    require "client.player.player_easter_eggs"
    require "client.player.packet_easter_eggs"
    require "client.entity.entity_easter_eggs"
    require "client.entity.entity_value_func_easter_eggs"
    require "client.gate_easter_eggs"
    require "client.gm_easter_eggs"
    require "client.easter_click_handler"
    require "client.easter_eggs_manager"
else
    require "server.async.easter_async"
    require "server.player.player_easter_eggs"
    require "server.player.packet_easter_eggs"
    require "server.entity.entity_easter_eggs"
    require "server.gate_easter_eggs"
    require "server.gm_easter_eggs"
    require "server.easter_eggs_mgr"
end

local handlers = {}
local setting = require "common.setting"

if World.isClient then
    Lib.subscribeEvent(Event.EVENT_EASTER_EGGS_TIPS, function(content)
        local win = UI:getWnd("easterEggsTips")
        win:onShow(true)
        win:updateContent(content)
    end)

else

    --- @type EasterEggsMgr
    local EasterEggsMgr = T(Lib, "EasterEggsMgr")

    function handlers.ENTITY_ENTER(context)
        local entity = context.obj1
        if not entity or not entity:isValid() then
            return
        end
        if entity.isPlayer then
            entity.easter_egg_loginTs = os.time()
            --- 5月10号 1652112000
            if os.time() >= 1652112000 then
                Lib.logWarning(" easter egg end ", os.time())
                --- 清数据
                entity:setEasterEggState({})
            else
                AsyncProcess.requestEasterActivityDate(entity.platformUserId, function(easterData)
                    if not entity or not entity:isValid() then
                        return
                    end

                    entity.easterEggData = easterData

                    Lib.logWarning("easterData == ", entity.platformUserId, Lib.v2s(easterData, 7))

                    entity:sendPacket({
                        pid = "syncEasterActivityDate",
                        easterData = easterData,
                    })

                    EasterEggsMgr:checkEasterEggState(entity)
                end)
            end
        end
    end
end

--function handlers.ENTITY_CLICK(context)
--    local entity = context.obj1
--    local from = context.obj2
--    if entity and entity:isValid() and entity:isEasterEggs()
--        and from and from:isValid() and from.isPlayer then
--        --EasterEggsMgr:onClickEntity(from, entity)
--    end
--end
--
--function handlers.END_MAP_LOADING(map)
--    if map and map:isValid() then
--        EasterEggsMgr:addNewMap(map)
--    end
--end


local EntityCfg = setting:mod("entity")
EntityCfg:set({
    fullName = "myplugin/easter_egg",
    actorName = "ob37_easteregg_high_1.actor",
    collision = true,
    name = "",
    canClick = true,
    checkEntityTouchEvent = true,
    checkTouchEvent = true,
    collisionGroup = 2,
    collisionMask = 256,
})

return function(name, ...)
	if type(handlers[name]) ~= "function" then
		return
	end
	return handlers[name](...)
end
