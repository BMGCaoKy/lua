---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hlm.
--- DateTime: 2022/5/10 17:51
---

--- @class NewVideoHelper
local NewVideoHelper = T(Lib, "NewVideoHelper")
local Recorder = T(Lib, "Recorder")

-- 启动录制
function NewVideoHelper:beginNewVideoRecord()
    if not self:isCanNewVideoRecord() then
        Lib.emitEvent(Event.EVENT_UPDATE_VIDEO_RECORD_STATE, Define.newVideoRecordState.NoneRecord)
        return
    end
    Recorder:AppRecordStart()
    Lib.emitEvent(Event.EVENT_UPDATE_VIDEO_RECORD_STATE, Define.newVideoRecordState.WaitConfirm)
end

-- 停止录制
function NewVideoHelper:stopNewVideoRecord()
    Lib.emitEvent(Event.EVENT_UPDATE_VIDEO_RECORD_STATE, Define.newVideoRecordState.NoneRecord)
    if self:isGoingNewVideoRecord() then
        Plugins.CallTargetPluginFunc("report", "report", "video_end",  {}, Me)
        Recorder:AppRecordStop()
    end
end

-- 是否正在录制
function NewVideoHelper:isGoingNewVideoRecord()
    return Recorder:IsAppRecording()
end

-- 是否支持录屏
function NewVideoHelper:isCanNewVideoRecord()
    return Recorder:IsAppRecordSupported()
end

-- 录屏结束回调
-- 外部可以直接调用 Plugins.CallTargetPluginFunc("new_video", "recordEndCallback", result)
function NewVideoHelper:recordEndCallback(result)
    Lib.logInfo("NewVideoHelper:recordEndCallback", result)
    if result == -1 then -- 取消录制
        Lib.emitEvent(Event.EVENT_UPDATE_VIDEO_RECORD_STATE, Define.newVideoRecordState.NoneRecord)
        return
    end

    if result == 100 then -- 确认开始录制
        self.startRecordTime = os.time()
        Lib.emitEvent(Event.EVENT_UPDATE_VIDEO_RECORD_STATE, Define.newVideoRecordState.Recording)
        return
    end

    if result == 0 then -- 录制完成,已录制的视频会放到相册中
        Client.ShowTip(1, Lang:toText("gui.new_video.record_success"), 40)
    elseif result == 48 then -- 手机内存不足,录制结束
        Client.ShowTip(1, Lang:toText("gui.new_video.record_memory"), 40)
        Plugins.CallTargetPluginFunc("report", "report", "error_storage",  {}, Me)
    elseif result == 38 then -- 参数不支持,录制失败
        Client.ShowTip(1, Lang:toText("gui.new_video.record_fail"), 40)
        Plugins.CallTargetPluginFunc("report", "report", "error_time",  {}, Me)
    end
    Lib.emitEvent(Event.EVENT_UPDATE_VIDEO_RECORD_STATE, Define.newVideoRecordState.NoneRecord)

    if self.startRecordTime then
        local defaultData = {
            videoRecordTime = os.time() - self.startRecordTime,
        }
        self.startRecordTime = nil
        Plugins.CallTargetPluginFunc("report", "report", "video_start_time", defaultData, Me)
    end
end