---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/11/17 16:01
---

local CommonActivityChestConfig = T(Config, "CommonActivityChestConfig") ---@class CommonActivityChestConfig

local Chests = {}
local ChestGroups = {}

local function initChestConfig(config)
    for _, item in pairs(config) do
        local data = {}
        data.chestId = tonumber(item.chestId)
        data.times = tonumber(item.times)
        data.normalImage = item.normalImage
        data.canOpenImage = item.canOpenImage
        data.openImage = item.openImage
        data.timesImage = item.timesImage
        data.rewardGroupId = tonumber(item.rewardGroupId)
        Chests[item.chestId] = data
        local group = ChestGroups[tostring(item.chestGroupId)]
        if group then
            table.insert(group.chests, data)
        end
    end
    for _, group in pairs(ChestGroups) do
        table.sort(group.chests, function(a, b)
            return a.times < b.times
        end)
    end
end

local function initChestGroupConfig(config)
    for _, item in pairs(config) do
        ChestGroups[item.chestGroupId] = {
            background = item.background,
            refreshTime = tonumber(item.refreshTime) or -1,
            chests = {}
        }
    end
end

local function init()
    ChestGroups = {}
    Chests = {}
    local config = Lib.read_csv_file(Root.Instance():getGamePath() .. "config/common/CommonActivityChestGroup.csv", 3)
    initChestGroupConfig(config or {})
    config = Lib.read_csv_file(Root.Instance():getGamePath() .. "config/common/CommonActivityChest.csv", 3)
    initChestConfig(config or {})
end

function CommonActivityChestConfig:getChestGroupById(groupId)
    return ChestGroups[tostring(groupId)]
end

function CommonActivityChestConfig:getChestById(chestId)
    return Chests[tostring(chestId)]
end

init()
