---
--- Generated by Luanalysis
--- Created by Administrator.
--- DateTime: 2020/12/22 16:58
---
local LuaTimer = T(Lib, "LuaTimer") ---@type LuaTimer
local ActivityLib = T(Lib, "ActivityLib") ---@type ActivityLib
local BlindBoxActivity = T(Lib, "BlindBoxActivity") ---@type BlindBoxActivity
---BlindBox
local BlindBoxInfo = {
    isInit = false,
    setting = nil,
    enable = false,
    lastTime = 0,
    dayLastTime = 0,
    blindBoxIds = ""
}
local ShowRule = { None = 0, EveryDayFirst = 1, EveryLogin = 2 }

local function initBlindBoxUI(setting)
    local main = UI:getWnd("blindBoxMain")
    ActivityLib.setGUIBySetting(main, setting.MainUI, "child")

    local layout = UI:getWnd("blindBoxLayout")
    ActivityLib.setGUIBySetting(layout, setting.LayoutUI, "child")

    LuaTimer:schedule(function()
        UI:getWnd("blindBoxRewardList")
    end, 20)
end

function BlindBoxActivity:init(setting)
    BlindBoxInfo.setting = setting
    initBlindBoxUI(setting)
    Lib.subscribeEvent(Event.EventBlindBoxInit, function(data)
        self:onBlindBoxInit(data)
    end)
end

function BlindBoxActivity:onBlindBoxInit(data)
    BlindBoxInfo.enable = data.enable
    BlindBoxInfo.lastTime = data.lastTime
    BlindBoxInfo.blindBoxList = data.blindBoxList
    BlindBoxInfo.dayLastTime = data.dayLastTime
    if BlindBoxInfo.lastTime ~= -1 then
        LuaTimer:cancel(BlindBoxInfo.initTimer)
        BlindBoxInfo.initTimer = LuaTimer:scheduleTimer(function()
            if BlindBoxInfo.lastTime > 0 then
                BlindBoxInfo.lastTime = BlindBoxInfo.lastTime - 1
            end
        end, 1000, BlindBoxInfo.lastTime)
    end
    LuaTimer:cancel(BlindBoxInfo.dayTimer)
    BlindBoxInfo.dayTimer = LuaTimer:scheduleTimer(function()
        if BlindBoxInfo.dayLastTime > 0 then
            BlindBoxInfo.dayLastTime = BlindBoxInfo.dayLastTime - 1
        else
            BlindBoxInfo.dayLastTime = Lib.getDaySeconds()
            UI:getWnd("blindBoxLayout"):resetBoxTimes()
        end
    end, 1000)
    if BlindBoxInfo.enable then
        UI:getWnd("blindBoxLayout"):initBoxList(BlindBoxInfo.blindBoxList)
    else
        UI:getWnd("blindBoxLayout"):onBlindBoxEnd()
    end
    if not BlindBoxInfo.enable or BlindBoxInfo.isInit then
        return
    end
    if BlindBoxInfo.setting.ShowRule == ShowRule.EveryLogin then
        UI:openWnd("blindBoxLayout")
    end
    if BlindBoxInfo.setting.ShowRule == ShowRule.EveryDayFirst then
        local day = Lib.getYearDayStr()
        local key = Game.GameName .. "-BlindBoxShowDay-" .. tostring(CGame.instance:getPlatformUserId())
        if ClientHelper.getStringForKey(key) ~= day then
            ClientHelper.putStringForKey(key, day)
            GUIManager:addShowQueue(GUIBlindBoxLayout)
        end
        if Interface.getStringForKey(key) ~= day then
            Interface.putStringForKey(key, day)
            UI:openWnd("blindBoxLayout")
        end
    end
end

function BlindBoxActivity:getBlindBoxInfo()
    return BlindBoxInfo
end