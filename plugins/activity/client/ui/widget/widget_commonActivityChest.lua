---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 10184.
--- DateTime: 2020/11/23 15:50
---
local CommonActivityChestConfig = T(Config, "CommonActivityChestConfig") ---@type CommonActivityChestConfig
local CommonActivityRewardPreview = T(UILib, "CommonActivityRewardPreview") ---@type CommonActivityRewardPreview

local widget_base = require "ui.widget.widget_base"
local M = Lib.derive(widget_base)

function M:init(activity)
    widget_base.init(self, "CommonActivityChest.json")
    self.activity = activity
    self:initWnd()
    self:initEvent()
end

function M:initWnd()
    self.ivLight = self:child("CommonActivityChest-Light")
    self.ivImage = self:child("CommonActivityChest-Image")
    self.llTimes = self:child("CommonActivityChest-Times")
    self.tvTimesText = self:child("CommonActivityChest-Times-Text")
end

function M:initEvent()
    self:subscribe(self:root(), UIEvent.EventWindowClick, function()
        self:onClickChest()
    end)
end

function M:onDataChanged(data)
    self.data = data
    UILib:setImageAdjustSize(self.ivImage, data.normalImage, 70, 70)
    self.llTimes:SetBackImage(data.timesImage)
    self.tvTimesText:SetText(string.format(Lang:getMessage("common.activity.times"), data.times))
    self:updateChest()
end

function M:onClickChest()
    if self.activity.lotteryTimes >= self.data.times then
        local getChest = Lib.splitString(self.activity.getChest, ",", true)
        if Lib.tableContain(getChest, self.data.chestId) then
            local tipStr = Lang:getMessage("common.activity.reward.hadReceive")
            self:showRewardPreview(self.data.chestId, tipStr, "common.activity.reward.title.hadReceive")
        else
            local data = { activityId = self.activity.id, chestId = self.data.chestId }
            Me:sendPacket({ pid = "CommonActivityOpenChest", data = data })
        end
    else
        local tipStr = string.format(Lang:getMessage("common.activity.reward.preview"),
                self.activity.lotteryTimes, (tonumber(self.data.times) - tonumber(self.activity.lotteryTimes)))
        self:showRewardPreview(self.data.chestId, tipStr, "common.activity.reward.preview.title")
    end
end

function M:showRewardPreview(chestId, tipStr, title)
    local chest = CommonActivityChestConfig:getChestById(chestId)
    if not chest then
        return
    end

    CommonActivityRewardPreview.builder()
                               .setRewardViewByGroupId(chest.rewardGroupId)
                               .setTopTip(tipStr)
                               .setTitleText(title)
                               .setRewardLayoutYPos({ 0, 20 })
                               .show()
end

function M:updateChest()
    if self.activity.lotteryTimes >= self.data.times then
        local getChest = Lib.splitString(self.activity.getChest, ",", true)
        if Lib.tableContain(getChest, self.data.chestId) then
            self.ivLight:SetVisible(false)
            UILib:setImageAdjustSize(self.ivImage, self.data.openImage, 70, 70)
        else
            self.ivLight:SetVisible(true)
            UILib:setImageAdjustSize(self.ivImage, self.data.canOpenImage or '', 70, 70)
        end
    else
        self.ivLight:SetVisible(false)
        UILib:setImageAdjustSize(self.ivImage, self.data.normalImage, 70, 70)
    end
end

return M