---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 10184.
--- DateTime: 2020/11/23 16:01
---
local widget_base = require "ui.widget.widget_base"
local M = Lib.derive(widget_base)

function M:init()
    widget_base.init(self, "CommonActivityRewardFloat.json")
    self:initWnd()
    self:initEvent()
end

function M:initWnd()
    self.llContent = self:child("CommonActivityRewardFloat-Content")
    self.llBackImage = self:child("CommonActivityRewardFloat-BackImage")
    self.llBackLine = self:child("CommonActivityRewardFloat-Line")
    self.ivImage = self:child("CommonActivityRewardFloat-Image")
    self.tvCount = self:child("CommonActivityRewardFloat-Count")
    self.tvName = self:child("CommonActivityRewardFloat-Name")
    self.tvDesc = self:child("CommonActivityRewardFloat-Desc")
    self.btnClose = self:child("CommonActivityRewardFloat-Close")
    self:hide()
end

function M:initEvent()
    self:subscribe(self:root(), UIEvent.EventWindowClick, function(_, dx, dy)
        self:hide()
        CGame.instance:handleTouchClick(dx, dy)
    end)
    self:subscribe(self.btnClose, UIEvent.EventButtonClick, function()
        self:hide()
    end)
end

function M:showReward(reward, window)
    self:root():SetVisible(true)
    self.llBackImage:SetVisible(true)
    self.llBackLine:SetVisible(true)
    self.tvDesc:SetArea({ 0, 0 }, { 0, -10 }, { 1, -24 }, { 1, -105 })

    self:setIcon(reward)
    self.tvName:SetText(Lang:getMessage(reward.name))
    self.tvDesc:SetText(Lang:getMessage(reward.desc))
    if reward.numLang ~= "#" then
        self.tvCount:SetText(Lang:getMessage(reward.numLang))
    else
        self.tvCount:SetText("")
    end
    self.llBackImage:SetBackImage("set:common_activity.json image:img_iconboard_" .. reward.quality)
    if window then
        local area1 = window:GetUnclippedOuterRect()
        local area2 = self:root():GetParent():GetUnclippedOuterRect()
        local centerX = area1[1] - area2[1] + (area1[3] - area1[1]) / 2
        local centerY = area1[2] - area2[2] + (area1[4] - area1[2]) / 2
        self.llContent:SetXPosition({ 0, centerX })
        self.llContent:SetYPosition({ 0, centerY - self.llContent:GetPixelSize().y })
    end
end

function M:showDesc(desc, window)
    self:root():SetVisible(true)
    self.llBackImage:SetVisible(false)
    self.llBackLine:SetVisible(false)

    self.tvDesc:SetArea({ 0, 0 }, { 0, -10 }, { 1, -24 }, { 1, -20 })
    self.tvDesc:SetText(Lang:getMessage(desc))
    if window then
        local area1 = window:GetUnclippedOuterRect()
        local area2 = self:root():GetParent():GetUnclippedOuterRect()
        local centerX = area1[1] - area2[1] + (area1[3] - area1[1]) / 2
        local centerY = area1[2] - area2[2] + (area1[4] - area1[2]) / 2
        self.llContent:SetXPosition({ 0, centerX })
        self.llContent:SetYPosition({ 0, centerY - self.llContent:GetPixelSize().y })
    end
end

function M:hide()
    self:root():SetVisible(false)
end

function M:setIcon(reward)
    if reward.imageScale and reward.imageScale ~= "#" then
        UILib:setImageAdjustSize(self.ivImage, reward.image, 60, 60, reward.imageScale)
    else
        UILib:setImageAdjustSize(self.ivImage, reward.image, 60, 60)
    end
    if reward.imageXOffset ~= "#" then
        self.ivImage:SetXPosition({ 0, reward.imageXOffset })
    end
    if reward.imageYOffset ~= "#" then
        self.ivImage:SetYPosition({ 0, reward.imageYOffset })
    end
end

return M