---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 10184.
--- DateTime: 2020/11/18 10:21
---
local BlindBoxActivity = T(Lib, "BlindBoxActivity") ---@type BlindBoxActivity
local widget_base = require "ui.widget.widget_base"
local M = Lib.derive(widget_base) ---@class BlindBoxItem : widget_base

function M:init()
    widget_base.init(self, "BlindBoxItem.json")
    self:initWnd()
    self:initEvent()
end

function M:initWnd()
    self.btnQuestion = self:child("BlindBoxItem-Question")
    self.btnShow = self:child("BlindBoxItem-Show")
    self.tvName = self:child("BlindBoxItem-Name")
    self.ivWorthIcon = self:child("BlindBoxItem-Worth-Icon")
    self.tvWorthText = self:child("BlindBoxItem-Worth-Text")
    self.tvTimeOrTimes = self:child("BlindBoxItem-Time-Or-Times")
    self.btnOpen = self:child("BlindBoxItem-Open")
    self.ivPriceIcon = self:child("BlindBoxItem-Price-Icon")
    self.tvPriceText = self:child("BlindBoxItem-Price-Text")
    self.btnOpen:SetText(Lang:getMessage("blind.box.open"))
end

function M:initEvent()
    self:subscribe(self.btnQuestion, UIEvent.EventButtonClick, function()
        UI:getWnd("blindBoxRewardList"):showBlindBoxRewards(self.data.id)
    end)
    self:subscribe(self.btnShow, UIEvent.EventButtonClick, function()
        UI:getWnd("blindBoxRewardList"):showBlindBoxRewards(self.data.id)
    end)
    self:subscribe(self.btnOpen, UIEvent.EventButtonClick, function()
        if self.data.openTimes >= self.data.totalTimes or self.data.dayOpenTimes >= self.data.dayTimes then
            return
        end
        if Lib.checkMoney(Me, self.data.moneyType, self.data.price) then
            print('sendPacket')
            local data = { boxId = self.data.id }
            Me:sendPacket({ pid = "BlindBoxOpen", data = data })
        end
    end)
end

function M:onDataChanged(data)
    self.data = data
    self.tvName:SetText(Lang:getMessage(data.name))
    self.tvWorthText:SetText(data.priceRange)
    self.ivWorthIcon:SetXPosition({ 0, -(self.tvWorthText:GetFont():GetTextExtent(data.priceRange, 1) + 5) / 2 })
    self.tvPriceText:SetText(tostring(data.price))
    self.ivPriceIcon:SetXPosition({ 0, -(self.tvPriceText:GetFont():GetTextExtent(tostring(data.price), 1) + 8) / 2 })
end

function M:updateTimeOrTimes()
    if self.data.openTimes >= self.data.totalTimes then
        self.ivPriceIcon:SetEnabled(false)
        self.btnOpen:SetEnabled(false)
        self.tvTimeOrTimes:SetText(Lang:getMessage("blind.box.open.max"))
    else
        if self.data.dayOpenTimes >= self.data.dayTimes then
            self.ivPriceIcon:SetEnabled(false)
            self.btnOpen:SetEnabled(false)
            self.tvTimeOrTimes:SetText(Lib.getFormatTime(BlindBoxActivity:getBlindBoxInfo().dayLastTime))
        else
            self.ivPriceIcon:SetEnabled(true)
            self.btnOpen:SetEnabled(true)
            self.tvTimeOrTimes:SetText(string.format(Lang:getMessage("blind.box.open.times"),
                    tostring(self.data.dayTimes - self.data.dayOpenTimes)))
        end
    end
end

return M