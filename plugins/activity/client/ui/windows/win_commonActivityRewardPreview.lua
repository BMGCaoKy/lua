---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 10184.
--- DateTime: 2020/11/16 11:09
---
local CommonActivityRewardConfig = T(Config, "CommonActivityRewardConfig") ---@type CommonActivityRewardConfig

function M:init()
    WinBase.init(self, "CommonActivityRewardPreview.json")
    self:initWnd()
    self:initEvent()
end

function M:initWnd()
    self.rewardLayoutPos = nil
    self.sureClickListener = nil

    self.tvTitle = self:child("CommonActivityRewardPreview-Title")
    self.tvTopTip = self:child("CommonActivityRewardPreview-Top-Tip")
    self.tvBottomTip = self:child("CommonActivityRewardPreview-Bottom-Tip")
    self.llReward = self:child("CommonActivityRewardPreview-Reward-Layout")

    self.tvTitle:SetText(Lang:getMessage("common.activity.reward.preview.title"))

    self.btnSure = self:child("CommonActivityRewardPreview-Sure")
    self.btnSure:SetText(Lang:getMessage("common.activity.sure"))
    self.btnClose = self:child("CommonActivityRewardPreview-Close")

    self.gvRewardList = UIMgr:new_widget("grid_view", self.llReward)
    self.gvRewardList:SetHorizontalAlignment(1)
    self.gvRewardList:SetVerticalAlignment(1)
    self.gvRewardList:SetClipChild(true)
    self.gvRewardList:SetArea({ 0, 0 }, { 0, 0 }, { 1, 0 }, { 1, 0 })
    self.gvRewardList:InitConfig(16, 16, 5)

    self.rewardLayoutPos = self.llReward:GetYPosition()
end

function M:initEvent()
    self:subscribe(self.btnSure, UIEvent.EventButtonClick, function()
        if self.sureClickListener ~= nil then
            local close = self.sureClickListener() ---返回true拦截dialog不关闭
            if not close then
                self:close()
            end
        else
            self:close()
        end
    end)
    self:subscribe(self.btnClose, UIEvent.EventWindowClick, function()
        self:close()
    end)
end

function M:setTopTip(text)
    if not text or text == "" then
        return
    end
    self.tvTopTip:SetVisible(true)
    self.tvTopTip:SetText(text)
end

function M:setTitle(text)
    if not text or text == "" then
        return
    end
    self.tvTitle:SetText(Lang:getMessage(text))
end

function M:setBottomText(text)
    if not text or text == "" then
        return
    end
    self.tvBottomTip:SetVisible(true)
    self.tvBottomTip:SetText(text)
end

function M:setRewardView(rewardConfig)
    local rewardNum = #rewardConfig
    local rowNum = math.ceil(rewardNum / 5)

    if rowNum == 1 then
        self.llReward:SetWidth({ 0, (84 * rewardNum + 16 * (rewardNum - 1)) })
        self.llReward:SetHeight({ 0, 84 })
    elseif rowNum == 2 then
        self.llReward:SetWidth({ 0, 486 })
        self.llReward:SetHeight({ 0, 184 })
    else
        self.llReward:SetWidth({ 0, 486 })
        self.llReward:SetHeight({ 0, 244 })
    end

    for _, rewardId in pairs(rewardConfig) do
        local reward = CommonActivityRewardConfig:getRewardById(rewardId)
        local rewardItem = UIMgr:new_widget("commonActivityRewardItem")
        rewardItem:invoke("setRewardData", reward)
        rewardItem:SetWidth({ 0, 84 })
        rewardItem:SetHeight({ 0, 84 })
        rewardItem:invoke("SetEffectMask","set:common_activity.json image:img_9_mask_popup")
        self.gvRewardList:invoke("ITEM", rewardItem)
    end
end

function M:setRewardLayoutYPos(pos)
    self.llReward:SetYPosition(pos)
end

function M:setDefault()
    self.gvRewardList:invoke("CLEAN")
    self.llReward:SetYPosition(self.rewardLayoutPos)

    self.sureClickListener = nil
    self.tvTopTip:SetText("")
    self.tvTopTip:SetVisible(false)
    self.tvBottomTip:SetText("")
    self.tvBottomTip:SetVisible(false)
end

function M:close()
    if self:isvisible() then
        UI:closeWnd("commonActivityRewardPreview")
        self:onHide()
    end
end

function M:onHide()
    self:setDefault()
end

function M:builder()
    self:setDefault()
end

function M:isShowAnim()
    return true
end

function M:setAlwaysOnTop(isTop)
    return self:root():SetAlwaysOnTop(isTop)
end

local CommonActivityRewardPreview = T(UILib, "CommonActivityRewardPreview") ---@class CommonActivityRewardPreview

---构造一个初始化状态的自定义奖励界面
function CommonActivityRewardPreview.builder()
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog:builder()
    return CommonActivityRewardPreview
end

---设置奖励界面奖励详情
---需要传入一个rewardId的列表
---@param  rewardList table rewardId列表
function CommonActivityRewardPreview.setRewardView(rewardList)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog:setRewardView(rewardList)
    return CommonActivityRewardPreview
end

---通过奖励groupId设置奖励界面奖励详情
---需要传入一个groupId
---@param  groupId number 奖励组Id
function CommonActivityRewardPreview.setRewardViewByGroupId(groupId)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    local rewardGroup = CommonActivityRewardConfig:getRewardGroupById(groupId)
    if rewardGroup ~= nil then
        local list = {}
        for _, rewardConfig in pairs(rewardGroup) do
            table.insert(list, rewardConfig.reward.rewardId)
        end
        dialog:setRewardView(list)
    end
    return CommonActivityRewardPreview
end

---设置奖励列表Y坐标
---@param  pos table rewardId列表
function CommonActivityRewardPreview.setRewardLayoutYPos(pos)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog:setRewardLayoutYPos(pos)
    return CommonActivityRewardPreview
end

---设置奖励列表上方提示
---@param text string 文字
function CommonActivityRewardPreview.setTitleText(text)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog:setTitle(text)
    return CommonActivityRewardPreview
end

---设置奖励列表上方提示
---@param text string 文字
function CommonActivityRewardPreview.setTopTip(text)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog:setTopTip(text)
    return CommonActivityRewardPreview
end

---设置奖励列表下方提示
---@param text string 文字
function CommonActivityRewardPreview.setBottomText(text)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog:setBottomText(text)
    return CommonActivityRewardPreview
end

---显示奖励界面
function CommonActivityRewardPreview.show()
    UI:openWnd("commonActivityRewardPreview")
end

---关闭奖励界面
function CommonActivityRewardPreview.hide()
    UI:closeWnd("commonActivityRewardPreview")
end

function CommonActivityRewardPreview.isShow()
    return UI:isOpen("commonActivityRewardPreview")
end

---设置奖励界面是否显示在最前
function CommonActivityRewardPreview.setAlwaysOnTop(isTop)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    return dialog:setAlwaysOnTop(isTop)
end

---显示居中提示
function CommonActivityRewardPreview.setCenterTip(text)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog:setRewardLayoutYPos({ 0, 40 })
    dialog.llReward:SetHeight({ 0, 0 })
    dialog:setTopTip(text)
    return CommonActivityRewardPreview
end

---设置奖励界面左按钮点击监听
---@param listener function 监听回调函数
function CommonActivityRewardPreview.setSureClickListener(listener)
    local dialog = UI:getWnd("commonActivityRewardPreview")
    dialog.sureClickListener = listener
    return CommonActivityRewardPreview
end