---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by bell.
--- DateTime: 2020/4/14 11:36
---
---@class UISubAnimation
local UISubAnimation = Lib.class("UISubAnimation")

function UISubAnimation:ctor(window, child, param)
    self.window = window
    self.config = child
    self.param = param
    self.isEnd = false

    self.tick = 1
    self.ticks = 1
    local time = param and param.time or self.config.time

    if time then
        ---@type UIAnimationManager
        local UIAnimationManager = T(UILib, "UIAnimationManager")
        self.ticks = math.ceil(tonumber(time) / UIAnimationManager:getUpdateTimeInterval())
    end
end

function UISubAnimation:play()
    self:onPlay()
end

function UISubAnimation:update()
    if self.isEnd then
        return
    end
    Profiler:begin("animationUpdate_" .. self.config.animType)

    self:onUpdate()

    if self.tick >= self.ticks then
        self:destroy()
    end
    Profiler:finish("animationUpdate_" .. self.config.animType)

    self.tick = self.tick + 1
end

function UISubAnimation:destroy()
    self:onDestroy()
    self.isEnd = true
end

function UISubAnimation:onPlay()
    --TODO
end

function UISubAnimation:onUpdate()
    --TODO
end

function UISubAnimation:onDestroy()
    --TODO
end

return UISubAnimation