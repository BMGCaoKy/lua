---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luo.
--- DateTime: 2020/6/5 10:52
---
local VoiceOperationType = {
    START_RECORD = 1,
    STOP_RECORD = 2,
    CANCEL_RECORD = 3,
    PLAY_VOICE = 11,
    AUTO_PLAY_VOICE = 12,
    STOP_VOICE = 13,
    CLEAN_AUTO_VOICE_LIST = 14
}

local VoiceOperationResult = {
    RECORD_SUCCESS = 1,
    RECORD_FAILURE = 2,
    PLAY_VOICE_START= 11,
    PLAY_VOICE_END = 12,
}
function VoiceManager:startRecord(receiverUserId)
    TdAudioEngine.Instance():getGlobalVolume(function(volume)
        self.curVolume = volume
        print("self.curVolume:",self.curVolume)
    end)
    TdAudioEngine.Instance():setGlobalVolume(0)
    if receiverUserId then--平台融云语音方案
        CGame.instance:getShellInterface():onStartRecordVoice(receiverUserId)
    else
        CGame.instance:getShellInterface():onVoiceOperation(VoiceOperationType.START_RECORD, "")
    end

end

function VoiceManager:stopRecord(receiverUserId)
    TdAudioEngine.Instance():setGlobalVolume(self.curVolume or 1)
    Lib.logDebug("VoiceManager:stopRecord:",receiverUserId)
    if receiverUserId then--平台融云语音方案
        CGame.instance:getShellInterface():onStopRecordVoice(receiverUserId,false)
    else
        CGame.instance:getShellInterface():onVoiceOperation(VoiceOperationType.STOP_RECORD, "")
    end

end

function VoiceManager:cancelRecord(receiverUserId)
    TdAudioEngine.Instance():setGlobalVolume(self.curVolume or 1)
    if receiverUserId then
        CGame.instance:getShellInterface():onStopRecordVoice(receiverUserId,true)
    else
        CGame.instance:getShellInterface():onVoiceOperation(VoiceOperationType.CANCEL_RECORD, "")
    end

end


local function playVoice(url , playType)
    local fileName = "temp_record_"  ..  tostring(Me.platformUserId) .. "_" .. tostring(os.time()) .. ".voice"
    local array = Lib.splitIncludeEmptyString(url,"/")
    if #array > 0 then
        fileName = array[#array]
    end

    local voicePath = Root.Instance():getWriteablePath() .. "../voice/" .. fileName
    local file, _ = io.open(voicePath)
    if file then
        file:close()
        CGame.instance:getShellInterface():onVoiceOperation(playType, voicePath)
        return
    end

    AsyncProcess.DownloadFile(url, voicePath, function (response)
        if response.code == 1 then
            CGame.instance:getShellInterface():onVoiceOperation(playType, voicePath)
        end
    end)
end

function VoiceManager:playVoice(url,time)
    if string.sub(url, -3) == "amr" then--融云方案
        self:onPlayVoiceStart(url)
        CGame.instance:getShellInterface():onPlayVoice(url)
        World.LightTimer("playVoiceOver",time*20,function()
            if self then
                self:onPlayVoiceEnd(url)
            end
        end)
    else
        playVoice(url, VoiceOperationType.PLAY_VOICE)
    end
end

function VoiceManager:autoPlayVoice(url)
    playVoice(url, VoiceOperationType.AUTO_PLAY_VOICE)
end

function VoiceManager:stopVoice()
    CGame.instance:getShellInterface():onVoiceOperation(VoiceOperationType.STOP_VOICE, "")
end
function VoiceManager:cleanAutoVoiceList()
    CGame.instance:getShellInterface():onVoiceOperation(VoiceOperationType.CLEAN_AUTO_VOICE_LIST, "")
end


--[[
	type 1 录音成功  2 失败  11 播放中  12 播放结束
	time 时长（毫秒）
	path 音频文件路径
]]--
function VoiceManager:onVoiceOperationResult(type, time, path)
    if type == VoiceOperationResult.RECORD_SUCCESS then
        self:onRecordSuccess(time, path)
    elseif(type == VoiceOperationResult.RECORD_FAILURE) then
        self:onRecordFailure()
    elseif(type == VoiceOperationResult.PLAY_VOICE_START) then
        self:onPlayVoiceStart(path)
    elseif(type == VoiceOperationResult.PLAY_VOICE_END) then
        self:onPlayVoiceEnd(path)
    end
    print("VoiceManager:onVoiceOperationResult type " .. type .. "  time " .. time .. "  path  " .. path)
end

function VoiceManager:onRecordSuccess(time, path)
    local file, _ = io.open(path)
    if not file then
        print("events:onVoiceOperationResult error, type = " .. path)
        Lib.emitEvent(Event.EVENT_CHAT_VOICE_FILE_ERROR, path)
        return
    end
    file:close()
    local fileName = "temp_record_"  ..  tostring(Me.platformUserId) .. "_" .. tostring(os.time()) .. ".voice"
    local array = Lib.splitIncludeEmptyString(path,"/")
    if #array > 0 then
        fileName = array[#array]
    end
    AsyncProcess.UploadFile(fileName, path, Game.GetAudioDir(),function (response)
    	if response.code == 1 then
            print("VoiceManager:onRecordSuccess -----------------------------------: " .. response.data)
            --self:playVoice(response.data)
            Lib.emitEvent(Event.EVENT_CHAT_SEND_VOICE, time, response.data)
            --TODO
    	end
    end)
end

function VoiceManager:onRecordFailure()
    print("VoiceManager:onRecordFailure -----------------------------------")
    
end

function VoiceManager:onPlayVoiceStart(path)
    print("VoiceManager:onPlayVoice -----------------------------------" .. path)
    TdAudioEngine.Instance():getGlobalVolume(function(volume)
        self.curVolume = volume
    end)
    TdAudioEngine.Instance():setGlobalVolume(0)
    Lib.emitEvent(Event.EVENT_CHAT_VOICE_START, path)
end

function VoiceManager:onPlayVoiceEnd(path)
    print("VoiceManager:onStopVoice -----------------------------------" .. path)
    TdAudioEngine.Instance():setGlobalVolume(self.curVolume or 1)
    Lib.emitEvent(Event.EVENT_CHAT_VOICE_END,path)
end
