---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jimmy.
--- DateTime: 2020/1/15 0015 17:11
---
local cjson = require "cjson"

local function buildParams(params)
    local data = ""
    for key, value in pairs(params) do
        if #data == 0 then
            data = data .. key .. "=" .. tostring(value)
        else
            data = data .. "&" .. key .. "=" .. tostring(value)
        end
    end
    return data
end

---调用app充值接口
---@param type number 充值类型（1：金磨方）
function Interface.onRecharge(type)
    if FunctionSetting:disableRecharge() then
        return
    end
    local rechargeData = Me:data("RechargeData")
    local enableSumRecharge = rechargeData.enableSumRecharge or 0
    local enableTimeRecharge = rechargeData.enableTimeRecharge or 0
    local gameType = World.GameName
    local userId = Me.platformUserId
    local params = {
        userId = tostring(userId),
        enableSumRecharge = tostring(enableSumRecharge),
        enableTimeRecharge = tostring(enableTimeRecharge),
        gameType = gameType
    }
    print(string.format("[ShellInterface.onRecharge] [type]=%d [params]=%s", type, buildParams(params)))
    CGame.instance:getShellInterface():onRecharge(type, buildParams(params))
end

---调用app事件触发接口
---@param type number 事件类型
---@param params string 自定义参数
function Interface.onAppActionTrigger(type, params)
    Lib.logInfo(string.format("[ShellInterface.onAppActionTrigger] [type]=%d [params]=%s", type, params))
    params = params or ""
    CGame.instance:onAppActionTrigger(type, params)
end

---使用key-value的数据调用app方法
---@param name string 调用app的方法名称
---@param params table 方法自定义参数
function Interface.callAppDataFunction(name, params)
    local result = params or {}
    result.functionName = name
    Interface.onAppActionTrigger(10000, buildParams(result))
end

---使用Json的数据调用app方法
---@param name string 调用app的方法名称
---@param params table 方法自定义参数
function Interface.callAppJsonFunction(name, params)
    local result = params or {}
    result.functionName = name
    Interface.onAppActionTrigger(10001, cjson.encode(result))
end

---设置bool变量到app缓存
---@param key string 变量唯一标识
---@param value boolean 变量值
function Interface.putBoolForKey(key, value)
    CGame.instance:getShellInterface():putBoolForKey(key, value)
end

---获取app缓存bool变量
---@param key string 变量唯一标识
---@param default boolean 变量默认值
---@return boolean 变量值
function Interface.getBoolForKey(key, default)
    default = default or false
    return CGame.instance:getShellInterface():getBoolForKey(key, default)
end

---设置string变量到app缓存
---@param key string 变量唯一标识
---@param value string 变量值
function Interface.putStringForKey(key, value)
    CGame.instance:getShellInterface():putStringForKey(key, value)
end

---获取app缓存string变量
---@param key string 变量唯一标识
---@param default string 变量默认值
---@return string 变量值
function Interface.getStringForKey(key, default)
    default = default or ""
    return CGame.instance:getShellInterface():getStringForKey(key, default)
end

---新跳转游戏接口，支持跳转旧引擎游戏
---@param params string 参数json串，gameType...
function Interface.newResetGame(params)
    Lib.logInfo(string.format("[Interface.newResetGame] [params]=%s", params))
    CGame.instance:getShellInterface():newResetGame(params)
end