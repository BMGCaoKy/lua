---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/4/11 1:30
---
local Registry = require "common.registry"

local GameObject = {}

---@class ComponentContainer
---@param target ComponentContainer
function GameObject.extend(target)
    target._components = {}
    target._world = nil

    function target:checkComponent(name)
        return self._components[name] ~= nil
    end

    function target:addComponent(name, ...)
        local component = Registry.newObject(name, ...)
        self._components[name] = component
        component:bind(self)
        self:dirty()
        return component
    end

    function target:removeComponent(name)
        local component = self._components[name]
        if component then
            component:unbind()
        end
        self._components[name] = nil
        self:dirty()
    end

    function target:getComponent(name)
        return self._components[name]
    end

    function target:setWorld(world)
        self._world = world
    end

    function target:getWorld()
        return self._world
    end

    function target:destroyTarget()
        if self._world then
            self._world:removeEntity(self)
        end

        return self
    end

    function target:dirty()
        if self._world then
            self._world:dirtyEntity(self)
        end

        return self
    end

    function target:inWorld()
        return self._world and true or false
    end

    function target:serialize()

    end

    function target:deserialize(data)

    end

    return target
end

return GameObject